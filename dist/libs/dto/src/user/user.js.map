{"version":3,"sources":["../../../../../libs/dto/src/user/user.ts"],"sourcesContent":["import { idSchema } from \"@reactive-resume/schema\";\r\nimport { dateSchema } from \"@reactive-resume/utils\";\r\nimport { createZodDto } from \"nestjs-zod/dto\";\r\nimport { z } from \"zod\";\r\n\r\nimport { secretsSchema } from \"../secrets\";\r\n\r\nexport const usernameSchema = z\r\n  .string()\r\n  .min(3)\r\n  .max(255)\r\n  .regex(/^[\\w.-]+$/, {\r\n    message: \"Usernames can only contain letters, numbers, periods, hyphens, and underscores.\",\r\n  })\r\n  .transform((value) => value.toLowerCase());\r\n\r\nexport const userSchema = z.object({\r\n  id: idSchema,\r\n  first_name: z.string().min(1).max(255),\r\n  last_name: z.string().min(1).max(255),  \r\n  picture: z.literal(\"\").or(z.null()).or(z.string().url()),\r\n  phone_number: z.string().min(1).max(255),\r\n  username: usernameSchema,\r\n  \r\n  email: z\r\n    .string()\r\n    .email()\r\n    .transform((value) => value.toLowerCase()),\r\n  locale: z.string().default(\"en-US\"),\r\n  emailVerified: z.boolean().default(false),\r\n  twoFactorEnabled: z.boolean().default(false),\r\n  provider: z.enum([\"email\", \"github\", \"google\", \"openid\"]).default(\"email\"),\r\n  createdAt: dateSchema,\r\n  updatedAt: dateSchema,\r\n});\r\n\r\nexport class UserDto extends createZodDto(userSchema) {}\r\n\r\nexport const userWithSecretsSchema = userSchema.merge(\r\n  z.object({ secrets: secretsSchema.nullable().default(null) }),\r\n);\r\n\r\nexport class UserWithSecrets extends createZodDto(userWithSecretsSchema) {}\r\n"],"names":["UserDto","UserWithSecrets","userSchema","userWithSecretsSchema","usernameSchema","z","string","min","max","regex","message","transform","value","toLowerCase","object","id","idSchema","first_name","last_name","picture","literal","or","null","url","phone_number","username","email","locale","default","emailVerified","boolean","twoFactorEnabled","provider","enum","createdAt","dateSchema","updatedAt","createZodDto","merge","secrets","secretsSchema","nullable"],"mappings":";;;;;;;;;;;IAoCaA,OAAO;eAAPA;;IAMAC,eAAe;eAAfA;;IA1BAC,UAAU;eAAVA;;IAsBAC,qBAAqB;eAArBA;;IA/BAC,cAAc;eAAdA;;;wBAPY;uBACE;qBACE;qBACX;yBAEY;AAEvB,MAAMA,iBAAiBC,MAAC,CAC5BC,MAAM,GACNC,GAAG,CAAC,GACJC,GAAG,CAAC,KACJC,KAAK,CAAC,aAAa;IAClBC,SAAS;AACX,GACCC,SAAS,CAAC,CAACC,QAAUA,MAAMC,WAAW;AAElC,MAAMX,aAAaG,MAAC,CAACS,MAAM,CAAC;IACjCC,IAAIC,gBAAQ;IACZC,YAAYZ,MAAC,CAACC,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC;IAClCU,WAAWb,MAAC,CAACC,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC;IACjCW,SAASd,MAAC,CAACe,OAAO,CAAC,IAAIC,EAAE,CAAChB,MAAC,CAACiB,IAAI,IAAID,EAAE,CAAChB,MAAC,CAACC,MAAM,GAAGiB,GAAG;IACrDC,cAAcnB,MAAC,CAACC,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC;IACpCiB,UAAUrB;IAEVsB,OAAOrB,MAAC,CACLC,MAAM,GACNoB,KAAK,GACLf,SAAS,CAAC,CAACC,QAAUA,MAAMC,WAAW;IACzCc,QAAQtB,MAAC,CAACC,MAAM,GAAGsB,OAAO,CAAC;IAC3BC,eAAexB,MAAC,CAACyB,OAAO,GAAGF,OAAO,CAAC;IACnCG,kBAAkB1B,MAAC,CAACyB,OAAO,GAAGF,OAAO,CAAC;IACtCI,UAAU3B,MAAC,CAAC4B,IAAI,CAAC;QAAC;QAAS;QAAU;QAAU;KAAS,EAAEL,OAAO,CAAC;IAClEM,WAAWC,iBAAU;IACrBC,WAAWD,iBAAU;AACvB;AAEO,IAAA,AAAMnC,UAAN,MAAMA,gBAAgBqC,IAAAA,iBAAY,EAACnC;AAAa;AAEhD,MAAMC,wBAAwBD,WAAWoC,KAAK,CACnDjC,MAAC,CAACS,MAAM,CAAC;IAAEyB,SAASC,sBAAa,CAACC,QAAQ,GAAGb,OAAO,CAAC;AAAM;AAGtD,IAAA,AAAM3B,kBAAN,MAAMA,wBAAwBoC,IAAAA,iBAAY,EAAClC;AAAwB"}