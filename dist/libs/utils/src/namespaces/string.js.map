{"version":3,"sources":["../../../../../libs/utils/src/namespaces/string.ts"],"sourcesContent":["import sanitizeHtml from \"sanitize-html\";\r\nimport type { Config as UniqueNamesConfig } from \"unique-names-generator\";\r\nimport { adjectives, animals, uniqueNamesGenerator } from \"unique-names-generator\";\r\n\r\nimport type { LayoutLocator, SortablePayload } from \"./types\";\r\n\r\nexport const getInitials = (name: string) => {\r\n  // eslint-disable-next-line unicorn/better-regex\r\n  const regex = new RegExp(/(\\p{L}{1})\\p{L}+/gu);\r\n  const initials = [...name.matchAll(regex)];\r\n\r\n  return ((initials.shift()?.[1] ?? \"\") + (initials.pop()?.[1] ?? \"\")).toUpperCase();\r\n};\r\n\r\nexport const isUrl = (string: string | null | undefined) => {\r\n  if (!string) return false;\r\n\r\n  const urlRegex = /https?:\\/\\/[^\\n ]+/i;\r\n\r\n  return urlRegex.test(string);\r\n};\r\n\r\nexport const isEmptyString = (string: string) => {\r\n  if (string === \"<p></p>\") return true;\r\n  return string.trim().length === 0;\r\n};\r\n\r\nexport const extractUrl = (string: string) => {\r\n  const urlRegex = /https?:\\/\\/[^\\n ]+/i;\r\n\r\n  const result = urlRegex.exec(string);\r\n  return result ? result[0] : null;\r\n};\r\n\r\nexport const generateRandomName = (options?: Omit<UniqueNamesConfig, \"dictionaries\">) => {\r\n  return uniqueNamesGenerator({\r\n    dictionaries: [adjectives, adjectives, animals],\r\n    style: \"capital\",\r\n    separator: \" \",\r\n    length: 3,\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport const processUsername = (string?: string | null) => {\r\n  if (!string) return \"\";\r\n\r\n  return string.replace(/[^\\d.A-Za-z-]/g, \"\").toLowerCase();\r\n};\r\n\r\nexport const parseLayoutLocator = (payload: SortablePayload | null): LayoutLocator => {\r\n  if (!payload) return { page: 0, column: 0, section: 0 };\r\n\r\n  const section = payload.index;\r\n  const [page, column] = payload.containerId.split(\".\").map(Number);\r\n\r\n  return { page, column, section };\r\n};\r\n\r\nexport const sanitize = (html: string, options?: sanitizeHtml.IOptions) => {\r\n  const allowedTags = (options?.allowedTags ?? []) as string[];\r\n\r\n  return sanitizeHtml(html, {\r\n    ...options,\r\n    allowedTags: [\r\n      ...allowedTags,\r\n      \"a\",\r\n      \"abbr\",\r\n      \"address\",\r\n      \"article\",\r\n      \"aside\",\r\n      \"b\",\r\n      \"bdi\",\r\n      \"bdo\",\r\n      \"blockquote\",\r\n      \"br\",\r\n      \"caption\",\r\n      \"cite\",\r\n      \"code\",\r\n      \"col\",\r\n      \"colgroup\",\r\n      \"data\",\r\n      \"dd\",\r\n      \"dfn\",\r\n      \"div\",\r\n      \"dl\",\r\n      \"dt\",\r\n      \"em\",\r\n      \"figcaption\",\r\n      \"figure\",\r\n      \"footer\",\r\n      \"h1\",\r\n      \"h2\",\r\n      \"h3\",\r\n      \"h4\",\r\n      \"h5\",\r\n      \"h6\",\r\n      \"header\",\r\n      \"hgroup\",\r\n      \"hr\",\r\n      \"i\",\r\n      \"img\",\r\n      \"kbd\",\r\n      \"li\",\r\n      \"main\",\r\n      \"main\",\r\n      \"mark\",\r\n      \"nav\",\r\n      \"ol\",\r\n      \"p\",\r\n      \"pre\",\r\n      \"q\",\r\n      \"rb\",\r\n      \"rp\",\r\n      \"rt\",\r\n      \"rtc\",\r\n      \"ruby\",\r\n      \"s\",\r\n      \"samp\",\r\n      \"section\",\r\n      \"small\",\r\n      \"span\",\r\n      \"strong\",\r\n      \"sub\",\r\n      \"sup\",\r\n      \"table\",\r\n      \"tbody\",\r\n      \"td\",\r\n      \"tfoot\",\r\n      \"th\",\r\n      \"thead\",\r\n      \"time\",\r\n      \"tr\",\r\n      \"u\",\r\n      \"ul\",\r\n      \"var\",\r\n      \"wbr\",\r\n    ],\r\n    allowedAttributes: {\r\n      ...options?.allowedAttributes,\r\n      \"*\": [\"class\", \"style\"],\r\n      a: [\"href\", \"target\"],\r\n      img: [\"src\", \"alt\"],\r\n    },\r\n    allowedStyles: {\r\n      ...options?.allowedStyles,\r\n      \"*\": { \"text-align\": [/^left$/, /^right$/, /^center$/, /^justify$/] },\r\n    },\r\n  });\r\n};\r\n"],"names":["extractUrl","generateRandomName","getInitials","isEmptyString","isUrl","parseLayoutLocator","processUsername","sanitize","name","initials","regex","RegExp","matchAll","shift","pop","toUpperCase","string","urlRegex","test","trim","length","result","exec","options","uniqueNamesGenerator","dictionaries","adjectives","animals","style","separator","replace","toLowerCase","payload","page","column","section","index","containerId","split","map","Number","html","allowedTags","sanitizeHtml","allowedAttributes","a","img","allowedStyles"],"mappings":";;;;;;;;;;;IA2BaA,UAAU;eAAVA;;IAOAC,kBAAkB;eAAlBA;;IA5BAC,WAAW;eAAXA;;IAgBAC,aAAa;eAAbA;;IARAC,KAAK;eAALA;;IAoCAC,kBAAkB;eAAlBA;;IANAC,eAAe;eAAfA;;IAeAC,QAAQ;eAARA;;;;;uEA3DY;sCAEiC;AAInD,MAAML,cAAc,CAACM;QAKjBC,iBAAgCA;IAJzC,gDAAgD;IAChD,MAAMC,QAAQ,IAAIC,OAAO;IACzB,MAAMF,WAAW;WAAID,KAAKI,QAAQ,CAACF;KAAO;QAEjCD,kBAAgCA;IAAzC,OAAO,AAAC,CAAA,AAACA,CAAAA,CAAAA,oBAAAA,kBAAAA,SAASI,KAAK,uBAAdJ,eAAkB,CAAC,EAAE,YAArBA,mBAAyB,EAAC,IAAMA,CAAAA,CAAAA,kBAAAA,gBAAAA,SAASK,GAAG,uBAAZL,aAAgB,CAAC,EAAE,YAAnBA,iBAAuB,EAAC,CAAC,EAAGM,WAAW;AAClF;AAEO,MAAMX,QAAQ,CAACY;IACpB,IAAI,CAACA,QAAQ,OAAO;IAEpB,MAAMC,WAAW;IAEjB,OAAOA,SAASC,IAAI,CAACF;AACvB;AAEO,MAAMb,gBAAgB,CAACa;IAC5B,IAAIA,WAAW,WAAW,OAAO;IACjC,OAAOA,OAAOG,IAAI,GAAGC,MAAM,KAAK;AAClC;AAEO,MAAMpB,aAAa,CAACgB;IACzB,MAAMC,WAAW;IAEjB,MAAMI,SAASJ,SAASK,IAAI,CAACN;IAC7B,OAAOK,SAASA,MAAM,CAAC,EAAE,GAAG;AAC9B;AAEO,MAAMpB,qBAAqB,CAACsB;IACjC,OAAOC,IAAAA,0CAAoB,EAAC;QAC1BC,cAAc;YAACC,gCAAU;YAAEA,gCAAU;YAAEC,6BAAO;SAAC;QAC/CC,OAAO;QACPC,WAAW;QACXT,QAAQ;OACLG;AAEP;AAEO,MAAMjB,kBAAkB,CAACU;IAC9B,IAAI,CAACA,QAAQ,OAAO;IAEpB,OAAOA,OAAOc,OAAO,CAAC,kBAAkB,IAAIC,WAAW;AACzD;AAEO,MAAM1B,qBAAqB,CAAC2B;IACjC,IAAI,CAACA,SAAS,OAAO;QAAEC,MAAM;QAAGC,QAAQ;QAAGC,SAAS;IAAE;IAEtD,MAAMA,UAAUH,QAAQI,KAAK;IAC7B,MAAM,CAACH,MAAMC,OAAO,GAAGF,QAAQK,WAAW,CAACC,KAAK,CAAC,KAAKC,GAAG,CAACC;IAE1D,OAAO;QAAEP;QAAMC;QAAQC;IAAQ;AACjC;AAEO,MAAM5B,WAAW,CAACkC,MAAclB;QAChBA;IAArB,MAAMmB,cAAenB,CAAAA,uBAAAA,2BAAAA,QAASmB,WAAW,YAApBnB,uBAAwB,EAAE;IAE/C,OAAOoB,IAAAA,qBAAY,EAACF,MAAM,eACrBlB;QACHmB,aAAa;eACRA;YACH;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QACDE,mBAAmB,eACdrB,2BAAAA,QAASqB,iBAAiB;YAC7B,KAAK;gBAAC;gBAAS;aAAQ;YACvBC,GAAG;gBAAC;gBAAQ;aAAS;YACrBC,KAAK;gBAAC;gBAAO;aAAM;;QAErBC,eAAe,eACVxB,2BAAAA,QAASwB,aAAa;YACzB,KAAK;gBAAE,cAAc;oBAAC;oBAAU;oBAAW;oBAAY;iBAAY;YAAC;;;AAG1E"}