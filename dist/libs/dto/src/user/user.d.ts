import { z } from "zod";
export declare const usernameSchema: z.ZodEffects<z.ZodString, string, string>;
export declare const userSchema: z.ZodObject<{
    id: z.ZodDefault<z.ZodString>;
    first_name: z.ZodString;
    last_name: z.ZodString;
    picture: z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"">, z.ZodNull]>, z.ZodString]>;
    phone_number: z.ZodString;
    username: z.ZodEffects<z.ZodString, string, string>;
    email: z.ZodEffects<z.ZodString, string, string>;
    locale: z.ZodDefault<z.ZodString>;
    emailVerified: z.ZodDefault<z.ZodBoolean>;
    twoFactorEnabled: z.ZodDefault<z.ZodBoolean>;
    provider: z.ZodDefault<z.ZodEnum<["email", "github", "google", "openid"]>>;
    createdAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updatedAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    created_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updated_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
}, "strip", z.ZodTypeAny, {
    email: string;
    id: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    locale: string;
    emailVerified: boolean;
    twoFactorEnabled: boolean;
    provider: "email" | "github" | "google" | "openid";
    createdAt: Date;
    updatedAt: Date;
    created_at: Date;
    updated_at: Date;
}, {
    email: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    createdAt: string | Date;
    updatedAt: string | Date;
    created_at: string | Date;
    updated_at: string | Date;
    id?: string | undefined;
    locale?: string | undefined;
    emailVerified?: boolean | undefined;
    twoFactorEnabled?: boolean | undefined;
    provider?: "email" | "github" | "google" | "openid" | undefined;
}>;
declare const UserDto_base: import("nestjs-zod/dto").ZodDto<{
    email: string;
    id: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    locale: string;
    emailVerified: boolean;
    twoFactorEnabled: boolean;
    provider: "email" | "github" | "google" | "openid";
    createdAt: Date;
    updatedAt: Date;
    created_at: Date;
    updated_at: Date;
}, z.ZodObjectDef<{
    id: z.ZodDefault<z.ZodString>;
    first_name: z.ZodString;
    last_name: z.ZodString;
    picture: z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"">, z.ZodNull]>, z.ZodString]>;
    phone_number: z.ZodString;
    username: z.ZodEffects<z.ZodString, string, string>;
    email: z.ZodEffects<z.ZodString, string, string>;
    locale: z.ZodDefault<z.ZodString>;
    emailVerified: z.ZodDefault<z.ZodBoolean>;
    twoFactorEnabled: z.ZodDefault<z.ZodBoolean>;
    provider: z.ZodDefault<z.ZodEnum<["email", "github", "google", "openid"]>>;
    createdAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updatedAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    created_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updated_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
}, "strip", z.ZodTypeAny>, {
    email: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    createdAt: string | Date;
    updatedAt: string | Date;
    created_at: string | Date;
    updated_at: string | Date;
    id?: string | undefined;
    locale?: string | undefined;
    emailVerified?: boolean | undefined;
    twoFactorEnabled?: boolean | undefined;
    provider?: "email" | "github" | "google" | "openid" | undefined;
}>;
export declare class UserDto extends UserDto_base {
}
export declare const userWithSecretsSchema: z.ZodObject<z.objectUtil.extendShape<{
    id: z.ZodDefault<z.ZodString>;
    first_name: z.ZodString;
    last_name: z.ZodString;
    picture: z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"">, z.ZodNull]>, z.ZodString]>;
    phone_number: z.ZodString;
    username: z.ZodEffects<z.ZodString, string, string>;
    email: z.ZodEffects<z.ZodString, string, string>;
    locale: z.ZodDefault<z.ZodString>;
    emailVerified: z.ZodDefault<z.ZodBoolean>;
    twoFactorEnabled: z.ZodDefault<z.ZodBoolean>;
    provider: z.ZodDefault<z.ZodEnum<["email", "github", "google", "openid"]>>;
    createdAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updatedAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    created_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updated_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
}, {
    secrets: z.ZodDefault<z.ZodNullable<z.ZodObject<{
        id: z.ZodDefault<z.ZodString>;
        password: z.ZodNullable<z.ZodString>;
        lastSignedIn: z.ZodNullable<z.ZodDate>;
        verificationToken: z.ZodNullable<z.ZodString>;
        twoFactorSecret: z.ZodNullable<z.ZodString>;
        twoFactorBackupCodes: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        refreshToken: z.ZodNullable<z.ZodString>;
        resetToken: z.ZodNullable<z.ZodString>;
        userId: z.ZodDefault<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        twoFactorBackupCodes: string[];
        refreshToken: string | null;
        resetToken: string | null;
        userId: string;
    }, {
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        refreshToken: string | null;
        resetToken: string | null;
        id?: string | undefined;
        twoFactorBackupCodes?: string[] | undefined;
        userId?: string | undefined;
    }>>>;
}>, "strip", z.ZodTypeAny, {
    email: string;
    id: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    locale: string;
    emailVerified: boolean;
    twoFactorEnabled: boolean;
    provider: "email" | "github" | "google" | "openid";
    createdAt: Date;
    updatedAt: Date;
    created_at: Date;
    updated_at: Date;
    secrets: {
        id: string;
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        twoFactorBackupCodes: string[];
        refreshToken: string | null;
        resetToken: string | null;
        userId: string;
    } | null;
}, {
    email: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    createdAt: string | Date;
    updatedAt: string | Date;
    created_at: string | Date;
    updated_at: string | Date;
    id?: string | undefined;
    locale?: string | undefined;
    emailVerified?: boolean | undefined;
    twoFactorEnabled?: boolean | undefined;
    provider?: "email" | "github" | "google" | "openid" | undefined;
    secrets?: {
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        refreshToken: string | null;
        resetToken: string | null;
        id?: string | undefined;
        twoFactorBackupCodes?: string[] | undefined;
        userId?: string | undefined;
    } | null | undefined;
}>;
declare const UserWithSecrets_base: import("nestjs-zod/dto").ZodDto<{
    email: string;
    id: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    locale: string;
    emailVerified: boolean;
    twoFactorEnabled: boolean;
    provider: "email" | "github" | "google" | "openid";
    createdAt: Date;
    updatedAt: Date;
    created_at: Date;
    updated_at: Date;
    secrets: {
        id: string;
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        twoFactorBackupCodes: string[];
        refreshToken: string | null;
        resetToken: string | null;
        userId: string;
    } | null;
}, z.ZodObjectDef<z.objectUtil.extendShape<{
    id: z.ZodDefault<z.ZodString>;
    first_name: z.ZodString;
    last_name: z.ZodString;
    picture: z.ZodUnion<[z.ZodUnion<[z.ZodLiteral<"">, z.ZodNull]>, z.ZodString]>;
    phone_number: z.ZodString;
    username: z.ZodEffects<z.ZodString, string, string>;
    email: z.ZodEffects<z.ZodString, string, string>;
    locale: z.ZodDefault<z.ZodString>;
    emailVerified: z.ZodDefault<z.ZodBoolean>;
    twoFactorEnabled: z.ZodDefault<z.ZodBoolean>;
    provider: z.ZodDefault<z.ZodEnum<["email", "github", "google", "openid"]>>;
    createdAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updatedAt: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    created_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
    updated_at: z.ZodEffects<z.ZodUnion<[z.ZodDate, z.ZodString]>, Date, string | Date>;
}, {
    secrets: z.ZodDefault<z.ZodNullable<z.ZodObject<{
        id: z.ZodDefault<z.ZodString>;
        password: z.ZodNullable<z.ZodString>;
        lastSignedIn: z.ZodNullable<z.ZodDate>;
        verificationToken: z.ZodNullable<z.ZodString>;
        twoFactorSecret: z.ZodNullable<z.ZodString>;
        twoFactorBackupCodes: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        refreshToken: z.ZodNullable<z.ZodString>;
        resetToken: z.ZodNullable<z.ZodString>;
        userId: z.ZodDefault<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        twoFactorBackupCodes: string[];
        refreshToken: string | null;
        resetToken: string | null;
        userId: string;
    }, {
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        refreshToken: string | null;
        resetToken: string | null;
        id?: string | undefined;
        twoFactorBackupCodes?: string[] | undefined;
        userId?: string | undefined;
    }>>>;
}>, "strip", z.ZodTypeAny>, {
    email: string;
    first_name: string;
    last_name: string;
    picture: string | null;
    phone_number: string;
    username: string;
    createdAt: string | Date;
    updatedAt: string | Date;
    created_at: string | Date;
    updated_at: string | Date;
    id?: string | undefined;
    locale?: string | undefined;
    emailVerified?: boolean | undefined;
    twoFactorEnabled?: boolean | undefined;
    provider?: "email" | "github" | "google" | "openid" | undefined;
    secrets?: {
        password: string | null;
        lastSignedIn: Date | null;
        verificationToken: string | null;
        twoFactorSecret: string | null;
        refreshToken: string | null;
        resetToken: string | null;
        id?: string | undefined;
        twoFactorBackupCodes?: string[] | undefined;
        userId?: string | undefined;
    } | null | undefined;
}>;
export declare class UserWithSecrets extends UserWithSecrets_base {
}
export {};
