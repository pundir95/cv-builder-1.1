{"version":3,"sources":["../../../../../libs/dto/src/auth/login.ts"],"sourcesContent":["import { createZodDto } from \"nestjs-zod/dto\";\r\nimport { z } from \"zod\";\r\n\r\nimport { usernameSchema } from \"../user\";\r\n\r\nexport const loginSchema = z\r\n  .object({\r\n    email: z.string().transform((value) => value.toLowerCase()),\r\n    password: z.string().min(6),\r\n  })\r\n  .refine(\r\n    (value) => {\r\n      return value.email.includes(\"@\")\r\n        ? z.string().email().parse(value.email)\r\n        : usernameSchema.parse(value.email);\r\n    },\r\n    { message: \"InvalidCredentials\" },\r\n  );\r\n\r\nexport class LoginDto extends createZodDto(loginSchema) {}\r\n"],"names":["LoginDto","loginSchema","z","object","email","string","transform","value","toLowerCase","password","min","refine","includes","parse","usernameSchema","message","createZodDto"],"mappings":";;;;;;;;;;;IAmBaA,QAAQ;eAARA;;IAdAC,WAAW;eAAXA;;;qBALgB;qBACX;sBAEa;AAExB,MAAMA,cAAcC,MAAC,CACzBC,MAAM,CAAC;IACNC,OAAOF,MAAC,CAACG,MAAM,GAAGC,SAAS,CAAC,CAACC,QAAUA,MAAMC,WAAW;IACxDC,UAAUP,MAAC,CAACG,MAAM,GAAGK,GAAG,CAAC;AAC3B,GACCC,MAAM,CACL,CAACJ;IACC,OAAOA,MAAMH,KAAK,CAACQ,QAAQ,CAAC,OACxBV,MAAC,CAACG,MAAM,GAAGD,KAAK,GAAGS,KAAK,CAACN,MAAMH,KAAK,IACpCU,oBAAc,CAACD,KAAK,CAACN,MAAMH,KAAK;AACtC,GACA;IAAEW,SAAS;AAAqB;AAG7B,IAAA,AAAMf,WAAN,MAAMA,iBAAiBgB,IAAAA,iBAAY,EAACf;AAAc"}