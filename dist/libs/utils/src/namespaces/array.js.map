{"version":3,"sources":["../../../../../libs/utils/src/namespaces/array.ts"],"sourcesContent":["import type { LayoutLocator } from \"./types\";\r\n\r\n// Function to find a specific item in a layout\r\nexport const findItemInLayout = (item: string, layout: string[][][]): LayoutLocator | null => {\r\n  for (const [page, element] of layout.entries()) {\r\n    for (const [column, element_] of element.entries()) {\r\n      for (const [section, element__] of element_.entries()) {\r\n        if (element__ === item) {\r\n          return { page, column, section };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// Function to remove a specific item in a layout\r\nexport const removeItemInLayout = (item: string, layout: string[][][]): LayoutLocator | null => {\r\n  const locator = findItemInLayout(item, layout);\r\n\r\n  if (locator) {\r\n    layout[locator.page][locator.column].splice(locator.section, 1);\r\n  }\r\n\r\n  return locator;\r\n};\r\n\r\n// Function to move an item within a layout\r\nexport const moveItemInLayout = (\r\n  current: LayoutLocator,\r\n  target: LayoutLocator,\r\n  layout: string[][][],\r\n): string[][][] => {\r\n  try {\r\n    // Create a deep copy of the layout to avoid mutating the original array\r\n    const newLayout = JSON.parse(JSON.stringify(layout));\r\n\r\n    // Get the item from the current location\r\n    const item = newLayout[current.page][current.column][current.section];\r\n\r\n    // Remove the item from the current location\r\n    newLayout[current.page][current.column].splice(current.section, 1);\r\n\r\n    // Insert the item at the target location\r\n    newLayout[target.page][target.column].splice(target.section, 0, item);\r\n\r\n    return newLayout;\r\n  } catch {\r\n    return layout;\r\n  }\r\n};\r\n"],"names":["findItemInLayout","moveItemInLayout","removeItemInLayout","item","layout","page","element","entries","column","element_","section","element__","locator","splice","current","target","newLayout","JSON","parse","stringify"],"mappings":";;;;;;;;;;;IAGaA,gBAAgB;eAAhBA;;IA0BAC,gBAAgB;eAAhBA;;IAXAC,kBAAkB;eAAlBA;;;AAfN,MAAMF,mBAAmB,CAACG,MAAcC;IAC7C,KAAK,MAAM,CAACC,MAAMC,QAAQ,IAAIF,OAAOG,OAAO,GAAI;QAC9C,KAAK,MAAM,CAACC,QAAQC,SAAS,IAAIH,QAAQC,OAAO,GAAI;YAClD,KAAK,MAAM,CAACG,SAASC,UAAU,IAAIF,SAASF,OAAO,GAAI;gBACrD,IAAII,cAAcR,MAAM;oBACtB,OAAO;wBAAEE;wBAAMG;wBAAQE;oBAAQ;gBACjC;YACF;QACF;IACF;IAEA,OAAO;AACT;AAGO,MAAMR,qBAAqB,CAACC,MAAcC;IAC/C,MAAMQ,UAAUZ,iBAAiBG,MAAMC;IAEvC,IAAIQ,SAAS;QACXR,MAAM,CAACQ,QAAQP,IAAI,CAAC,CAACO,QAAQJ,MAAM,CAAC,CAACK,MAAM,CAACD,QAAQF,OAAO,EAAE;IAC/D;IAEA,OAAOE;AACT;AAGO,MAAMX,mBAAmB,CAC9Ba,SACAC,QACAX;IAEA,IAAI;QACF,wEAAwE;QACxE,MAAMY,YAAYC,KAAKC,KAAK,CAACD,KAAKE,SAAS,CAACf;QAE5C,yCAAyC;QACzC,MAAMD,OAAOa,SAAS,CAACF,QAAQT,IAAI,CAAC,CAACS,QAAQN,MAAM,CAAC,CAACM,QAAQJ,OAAO,CAAC;QAErE,4CAA4C;QAC5CM,SAAS,CAACF,QAAQT,IAAI,CAAC,CAACS,QAAQN,MAAM,CAAC,CAACK,MAAM,CAACC,QAAQJ,OAAO,EAAE;QAEhE,yCAAyC;QACzCM,SAAS,CAACD,OAAOV,IAAI,CAAC,CAACU,OAAOP,MAAM,CAAC,CAACK,MAAM,CAACE,OAAOL,OAAO,EAAE,GAAGP;QAEhE,OAAOa;IACT,EAAE,UAAM;QACN,OAAOZ;IACT;AACF"}